import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.f1c0562b.js";const C=JSON.parse('{"title":"Использование GPIO на примерах решаемых задач","description":"","frontmatter":{},"headers":[],"relativePath":"gpio_sample.md","filePath":"gpio_sample.md"}'),o={name:"gpio_sample.md"},p=l(`<h1 id="использование-gpio-на-примерах-решаемых-задач" tabindex="-1">Использование GPIO на примерах решаемых задач <a class="header-anchor" href="#использование-gpio-на-примерах-решаемых-задач" aria-label="Permalink to &quot;Использование GPIO на примерах решаемых задач&quot;">​</a></h1><p>GPIO входы <a href="./devices/din_mini_io_rus">6-ти канального модуля расширения</a> <a href="./devices/din_mini_base_rus">SLS DIN MINI</a> легко могут быть использованы для решения типовых задач. Рассмотрим типовые местоды использования на примерах.</p><h2 id="концевик-геркон-ворот-калитки-датчика-затопления-емкости-септика" tabindex="-1">Концевик (геркон) ворот / калитки / датчика затопления емкости септика <a class="header-anchor" href="#концевик-геркон-ворот-калитки-датчика-затопления-емкости-септика" aria-label="Permalink to &quot;Концевик (геркон) ворот / калитки / датчика затопления емкости септика&quot;">​</a></h2><p>В данном примере SLS DIN MINI считывет состояние GPIO, направляет уведомление об изменении состояния в telegram, отправляет измененное состояние объекта в mqtt, средствами Home-Assisant отправляет в telegram снапшот с камеры.</p><ol><li>Убедимся, что DIP-перемычки нужных портов находятся в положении IN (нижнее положение). Порты модуля расширения в режиме IN cрабатывают при замыкании входа на GND. Необходимые порты соединяем с GND (выходом &quot;-&quot;) блока питания, второй полюс концевиков соединяем с соответсвующими портами модуля ввода-вывода. В нашем примере подключены герконы калитки (вход 2) и откатных ворот (вход 4).</li><li>В <a href="/web">Web-интерфейсе SLS</a> на вкладке Actions, если еще не создан, необходимо создать файл init.lua, этот скрипт выполняется при старте контроллера. Далее необходимо указать порты, которые будут в режиме чтения. Для интеграции с Home-Assistant, можно создать <a href="/objects">объект</a>, который при изменении gpio будет менять свое состояние. Пример скрипта init.lua</li></ol><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input2&quot;</span><span style="color:#E1E4E8;">)      </span><span style="color:#6A737D;">-- задаем режим работы входа 2 для GPIO32 контроллера (калитка)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input4&quot;</span><span style="color:#E1E4E8;">)      </span><span style="color:#6A737D;">-- задаем режим работы входа 4 для GPIO32 контроллера (ворота)</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setOpt</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;vorota&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;STR&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)                 </span><span style="color:#6A737D;">-- создаем объект с состоянием отслеживаемого объекта</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setOpt</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;kalitka&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;STR&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)                </span><span style="color:#6A737D;">-- создаем объект с состоянием отслеживаемого объекта</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">onChange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;io.input2.value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;vorota.lua&#39;</span><span style="color:#E1E4E8;">)   </span><span style="color:#6A737D;">-- задаем имя скрипта, которое будет запускаться при изменении значения входа</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">onChange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;io.input4.value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;vorota.lua&#39;</span><span style="color:#E1E4E8;">)   </span><span style="color:#6A737D;">-- задаем имя скрипта, которое будет запускаться при изменении значения входа</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input2&quot;</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;">-- задаем режим работы входа 2 для GPIO32 контроллера (калитка)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input4&quot;</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;">-- задаем режим работы входа 4 для GPIO32 контроллера (ворота)</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setOpt</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;vorota&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;STR&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)                 </span><span style="color:#6A737D;">-- создаем объект с состоянием отслеживаемого объекта</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setOpt</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;kalitka&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;STR&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)                </span><span style="color:#6A737D;">-- создаем объект с состоянием отслеживаемого объекта</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">onChange</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;io.input2.value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vorota.lua&#39;</span><span style="color:#24292E;">)   </span><span style="color:#6A737D;">-- задаем имя скрипта, которое будет запускаться при изменении значения входа</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">onChange</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;io.input4.value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vorota.lua&#39;</span><span style="color:#24292E;">)   </span><span style="color:#6A737D;">-- задаем имя скрипта, которое будет запускаться при изменении значения входа</span></span></code></pre></div><ol start="3"><li>Пример скрипта vorota.lua</li></ol><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> Event.</span><span style="color:#B392F0;">Type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span><span style="color:#E1E4E8;">                             </span><span style="color:#6A737D;">-- тип события, вызываемого при изменении объекта</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> Name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Event.</span><span style="color:#B392F0;">Obj</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Name</span><span style="color:#E1E4E8;">                       </span><span style="color:#6A737D;">-- имя объекта, который  вызвал скрипт</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> Value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Event.</span><span style="color:#B392F0;">Obj</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Value</span><span style="color:#E1E4E8;">                     </span><span style="color:#6A737D;">-- текущее значение объекта</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> OldValue </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Event.</span><span style="color:#B392F0;">Obj</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">OldValue</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;">-- предыщущее значение объекта</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> vorota </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gpio.</span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">)                      </span><span style="color:#6A737D;">-- получим состояние GPIO в моменте</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> kalitka </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gpio.</span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">)                     </span><span style="color:#6A737D;">-- получим состояние GPIO в моменте</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> sunset_hour, sunset_min </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">sunset</span><span style="color:#E1E4E8;">()       </span><span style="color:#6A737D;">-- задаем время заката</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> sunrise_hour, sunrise_min </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> os.</span><span style="color:#79B8FF;">sunrise</span><span style="color:#E1E4E8;">()    </span><span style="color:#6A737D;">-- задаем время рассвета</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> vorota </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> Name</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;io.input4.value&quot; </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Открываются уличные ворота&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;vorota&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> vorota </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> Name</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;io.input4.value&quot;</span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;vorota&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Уличные ворота закрыты&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> kalitka </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> Name</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;io.input2.value&quot; </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Калитка открыта&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;kalitka&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> kalitka </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> Name</span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;io.input2.value&quot;</span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;kalitka&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Калитка закрыта&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--свет включаем для любого из вариантов</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">    (Event.</span><span style="color:#B392F0;">Time</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hour</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> sunset_hour </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> Event.</span><span style="color:#B392F0;">Time</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">min</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> sunset_min) </span><span style="color:#F97583;">or</span></span>
<span class="line"><span style="color:#E1E4E8;">      (Event.</span><span style="color:#B392F0;">Time</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hour</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> sunrise_hour </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;">   Event.</span><span style="color:#B392F0;">Time</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">min</span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;">sunrise_min)</span></span>
<span class="line"><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">   zigbee.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;0x00124B001EC83D62&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;state_l5&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;ON&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   zigbee.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;0x00124B001EC83D62&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;state_l3&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;ON&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> Event.</span><span style="color:#6F42C1;">Type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span><span style="color:#24292E;">                             </span><span style="color:#6A737D;">-- тип события, вызываемого при изменении объекта</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> Name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Event.</span><span style="color:#6F42C1;">Obj</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Name</span><span style="color:#24292E;">                       </span><span style="color:#6A737D;">-- имя объекта, который  вызвал скрипт</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> Value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Event.</span><span style="color:#6F42C1;">Obj</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Value</span><span style="color:#24292E;">                     </span><span style="color:#6A737D;">-- текущее значение объекта</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> OldValue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Event.</span><span style="color:#6F42C1;">Obj</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">OldValue</span><span style="color:#24292E;">               </span><span style="color:#6A737D;">-- предыщущее значение объекта</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> vorota </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gpio.</span><span style="color:#005CC5;">read</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">)                      </span><span style="color:#6A737D;">-- получим состояние GPIO в моменте</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> kalitka </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gpio.</span><span style="color:#005CC5;">read</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">)                     </span><span style="color:#6A737D;">-- получим состояние GPIO в моменте</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> sunset_hour, sunset_min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">sunset</span><span style="color:#24292E;">()       </span><span style="color:#6A737D;">-- задаем время заката</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> sunrise_hour, sunrise_min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> os.</span><span style="color:#005CC5;">sunrise</span><span style="color:#24292E;">()    </span><span style="color:#6A737D;">-- задаем время рассвета</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> vorota </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> Name</span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;io.input4.value&quot; </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Открываются уличные ворота&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vorota&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> vorota </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> Name</span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;io.input4.value&quot;</span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vorota&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Уличные ворота закрыты&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> kalitka </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> Name</span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;io.input2.value&quot; </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Калитка открыта&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;kalitka&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> kalitka </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> Name</span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;io.input2.value&quot;</span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;kalitka&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Калитка закрыта&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--свет включаем для любого из вариантов</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">    (Event.</span><span style="color:#6F42C1;">Time</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hour</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> sunset_hour </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> Event.</span><span style="color:#6F42C1;">Time</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> sunset_min) </span><span style="color:#D73A49;">or</span></span>
<span class="line"><span style="color:#24292E;">      (Event.</span><span style="color:#6F42C1;">Time</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hour</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> sunrise_hour </span><span style="color:#D73A49;">and</span><span style="color:#24292E;">   Event.</span><span style="color:#6F42C1;">Time</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">min</span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;">sunrise_min)</span></span>
<span class="line"><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">   zigbee.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;0x00124B001EC83D62&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;state_l5&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;ON&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   zigbee.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;0x00124B001EC83D62&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;state_l3&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;ON&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div>`,8),e=[p];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const q=s(o,[["render",t]]);export{C as __pageData,q as default};
