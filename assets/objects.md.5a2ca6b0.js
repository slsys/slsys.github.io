import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.f1c0562b.js";const e="/assets/obj.baec0ac5.png",b=JSON.parse('{"title":"Объекты","description":"","frontmatter":{},"headers":[],"relativePath":"objects.md","filePath":"objects.md"}'),p={name:"objects.md"},o=l('<h1 id="объекты" tabindex="-1">Объекты <a class="header-anchor" href="#объекты" aria-label="Permalink to &quot;Объекты&quot;">​</a></h1><p>Объекты - это универсальная сущность для хранения и обмена данными между подсистемами шлюза, например между скриптами LUA. Также объекты позволяют выполнять скрипты при изменении своих значений.</p><p>К объектам можно обращаться из скриптов<a href="/objects#lua">LUA</a>, <a href="/objects#http-api">HTTP API</a> и из <a href="/simplebind#записать-значение-в-объект">Simple Bind</a></p><h2 id="веб-интерфеис" tabindex="-1">Веб интерфейс <a class="header-anchor" href="#веб-интерфеис" aria-label="Permalink to &quot;Веб интерфейс&quot;">​</a></h2><p>Просмотреть текущие объекты можно на странице Objects.</p><p><img src="'+e+`" alt="object"></p><p>В таблице отображаются следующие данные:</p><ul><li>имя объекта</li><li>тип данных: <ul><li>STR - Строки (используется по умолчанию)</li><li>BOOL - Бинарный (true / false)</li><li>INT - Целое число</li><li>FLOAT - Дробное число</li><li>JSON - строка формата JSON</li></ul></li><li>значения - текущее и предыдущее</li><li>время изменения - timestamp последнего и предпоследнего изменения</li><li>флаги: <ul><li>A (Ack) - при изменении значения объекта передан признак Ack (описание ниже).</li><li>M (MQTT Notify) - при изменении значения объекта значение передается в MQTT (описание ниже). Ранее обозначался символом <code>N</code></li><li>W (Write) - изменение значения при каждом обращении на запись объекта</li></ul></li></ul><h2 id="инициализация-объектов" tabindex="-1">Инициализация объектов <a class="header-anchor" href="#инициализация-объектов" aria-label="Permalink to &quot;Инициализация объектов&quot;">​</a></h2><p>Объекты хранятся только в памяти и не сохраняются во флеш-память. Поэтому, при необходимости, инициализировать объекты можно в стартовом скрипте <code>init.lua</code>, с помощью функций <code>obj.setOpt(), obj.set()</code>. Если начальные значения задавать не требуется, то инициализировать не обязательно, поскольку объект создается при первом к нему обращении.</p><h2 id="флаги" tabindex="-1">Флаги <a class="header-anchor" href="#флаги" aria-label="Permalink to &quot;Флаги&quot;">​</a></h2><p>Позволяют отслеживать функционал объектов. Установка доступна из скриптов LUA. Чтение - как из LUA, так и из HTTP API.</p><h3 id="обратная-связь-при-изменении-значения-объектов" tabindex="-1">Обратная связь при изменении значения объектов <a class="header-anchor" href="#обратная-связь-при-изменении-значения-объектов" aria-label="Permalink to &quot;Обратная связь при изменении значения объектов&quot;">​</a></h3><p>Флаг <code>A</code> - <code>ACK</code></p><p>Объекты поддерживают установку флага обратной связи, таким образом можно в вызываемом скрипте можно получить информацию об источнике изменения.</p><p>Флаг обратной связи виден в веб-интерфейсе (<code>A</code>), а так же возвращается в LUA и HTTP API командах. Также этот флаг передается в событии <code>Event.Obj.Ack</code> скрипту, вызванному по изменению или записи объекта.</p><h3 id="mqtt-notify" tabindex="-1">MQTT Notify <a class="header-anchor" href="#mqtt-notify" aria-label="Permalink to &quot;MQTT Notify&quot;">​</a></h3><p>Флаг <code>M</code> - <code>MQTT Notify</code></p><p>Шлюз может отправлять уведомления в MQTT при изменении объекта.</p><p>При поднятом флаге, шлюз будет публиковать в топик вида: <code>zgwXXXX/obj/OBJ_NAME</code></p><p>Для изменения объекта необходимо отправить значение объекта в топик <code>zgwXXXX/obj/OBJ_NAME/set</code></p><p>Для запроса текущего значения объекта необходимо отправить пустой топик <code>zgwXXXX/obj/OBJ_NAME/get</code></p><h3 id="изменение-значения-при-каждом-обращении-на-запись-объекта" tabindex="-1">Изменение значения при каждом обращении на запись объекта <a class="header-anchor" href="#изменение-значения-при-каждом-обращении-на-запись-объекта" aria-label="Permalink to &quot;Изменение значения при каждом обращении на запись объекта&quot;">​</a></h3><p>Флаг <code>W</code> - <code>Write</code></p><p>При поднятом флаге запись значения в объект производится при каждом к нему обращении.</p><h2 id="apis-для-работы-с-объектами" tabindex="-1">APIs для работы с объектами <a class="header-anchor" href="#apis-для-работы-с-объектами" aria-label="Permalink to &quot;APIs для работы с объектами&quot;">​</a></h2><h3 id="lua" tabindex="-1">LUA <a class="header-anchor" href="#lua" aria-label="Permalink to &quot;LUA&quot;">​</a></h3><h4 id="события" tabindex="-1">События <a class="header-anchor" href="#события" aria-label="Permalink to &quot;События&quot;">​</a></h4><p>При вызове скрипта привязанного к объекту вызывается событие с типом <code>SCRIPT_EVENT_TYPE_OBJ_CHANGE</code> и значением 2.</p><ul><li><code>Event.Obj.Name</code> - имя объекта, который вызвал скрипт</li><li><code>Event.Obj.Ack</code> - флаг обратной связи объекта</li><li><code>Event.Obj.Value</code> - текущее значение</li><li><code>Event.Obj.OldValue</code> - предыдущее значение</li></ul><h4 id="obj-settype" tabindex="-1">obj.setType() <a class="header-anchor" href="#obj-settype" aria-label="Permalink to &quot;obj.setType()&quot;">​</a></h4><p>Изменение типа данных, записываемых в объект. Если объекта не существует, он будет создан.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setType</span><span style="color:#E1E4E8;">(name, </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- type - STR, тип хранимых данных: STR, INT, BOOL, FLOAT, JSON</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setType</span><span style="color:#24292E;">(name, </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- type - STR, тип хранимых данных: STR, INT, BOOL, FLOAT, JSON</span></span></code></pre></div><h4 id="obj-setshare" tabindex="-1">obj.setShare() <a class="header-anchor" href="#obj-setshare" aria-label="Permalink to &quot;obj.setShare()&quot;">​</a></h4><p>Управление сетевыми флагами объекта. На 25.10.2023 доступен флаг MQTT.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setShare</span><span style="color:#E1E4E8;">(name, mqtt)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- mqtt - BOOL, флаг передачи уведомлений в MQTT</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- false = передача выключена</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- true = передача включена. В таблице объектов (WebUI/Objects) отображается сомволом M (MQTT Notify)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setShare</span><span style="color:#24292E;">(name, mqtt)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- mqtt - BOOL, флаг передачи уведомлений в MQTT</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- false = передача выключена</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- true = передача включена. В таблице объектов (WebUI/Objects) отображается сомволом M (MQTT Notify)</span></span></code></pre></div><h4 id="obj-setopt-deprecated" tabindex="-1">obj.setOpt() - deprecated <a class="header-anchor" href="#obj-setopt-deprecated" aria-label="Permalink to &quot;obj.setOpt() - deprecated&quot;">​</a></h4><p>Изменение типа данных, записываемых в объект, управление флагом передачи уведомлений в MQTT. Если объекта не существует, он будет создан. <strong>Внимание</strong> функция может быть удалена в прошивках после 2023.10.25. Её заменят функции obj.setType() для настройки типов и obj.setShare() для настройки флагов.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setOpt</span><span style="color:#E1E4E8;">(name, </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">[, flagMQTT])</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- type - STR, тип хранимых данных: STR, INT, BOOL, FLOAT, JSON</span></span>
<span class="line"><span style="color:#6A737D;">-- flagMQTT - BOOL, флаг передачи уведомлений в MQTT</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- false = передача выключена</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- true = передача включена. В таблице объектов (WebUI/Objects) отображается сомволом M (MQTT Notify)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setOpt</span><span style="color:#24292E;">(name, </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">[, flagMQTT])</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- type - STR, тип хранимых данных: STR, INT, BOOL, FLOAT, JSON</span></span>
<span class="line"><span style="color:#6A737D;">-- flagMQTT - BOOL, флаг передачи уведомлений в MQTT</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- false = передача выключена</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- true = передача включена. В таблице объектов (WebUI/Objects) отображается сомволом M (MQTT Notify)</span></span></code></pre></div><h4 id="obj-set" tabindex="-1">obj.set() <a class="header-anchor" href="#obj-set" aria-label="Permalink to &quot;obj.set()&quot;">​</a></h4><p>Запись данных в объект, управление флагом обратной связи. Если объекта не существует, он будет создан.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(name, value[, flagACK])</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- value - записываемые данные, любого типа</span></span>
<span class="line"><span style="color:#6A737D;">-- flagACK - BOOL, флаг обратной связи</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- true = включен. В таблице объектов отображается символом A (ACK)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- false = выключен. В таблице объектов не отображается</span></span>
<span class="line"><span style="color:#6A737D;">-- result - BOOL, true - значение изменено и успешно записано, false - значение не изменилось, поэтому не записано</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(name, value[, flagACK])</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- value - записываемые данные, любого типа</span></span>
<span class="line"><span style="color:#6A737D;">-- flagACK - BOOL, флаг обратной связи</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- true = включен. В таблице объектов отображается символом A (ACK)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- false = выключен. В таблице объектов не отображается</span></span>
<span class="line"><span style="color:#6A737D;">-- result - BOOL, true - значение изменено и успешно записано, false - значение не изменилось, поэтому не записано</span></span></code></pre></div><h4 id="obj-get" tabindex="-1">obj.get() <a class="header-anchor" href="#obj-get" aria-label="Permalink to &quot;obj.get()&quot;">​</a></h4><p>Получение данных, хранящихся в объекте</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">get</span><span style="color:#E1E4E8;">(name)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- result - текущее значение или NIL если объект не найден</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">get</span><span style="color:#24292E;">(name)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- result - текущее значение или NIL если объект не найден</span></span></code></pre></div><p>В объекте хранится текущее значение, предыдущее и состояние флага ACK.</p><p>Пример получения всех значений:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> current_value, previos_value, flag_ack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;object_name&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- переменные будут содержать:</span></span>
<span class="line"><span style="color:#6A737D;">-- current_value = текущее значение</span></span>
<span class="line"><span style="color:#6A737D;">-- previos_value = предыдущее значение</span></span>
<span class="line"><span style="color:#6A737D;">-- flag_ack = статус флага ACK: true|false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> current_value, previos_value, flag_ack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;object_name&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- переменные будут содержать:</span></span>
<span class="line"><span style="color:#6A737D;">-- current_value = текущее значение</span></span>
<span class="line"><span style="color:#6A737D;">-- previos_value = предыдущее значение</span></span>
<span class="line"><span style="color:#6A737D;">-- flag_ack = статус флага ACK: true|false</span></span></code></pre></div><h4 id="obj-gettime" tabindex="-1">obj.getTime() <a class="header-anchor" href="#obj-gettime" aria-label="Permalink to &quot;obj.getTime()&quot;">​</a></h4><p>Получение тайм-штампов изменения текущего и предыдущего значений. Оба значения можно получить так-же как в <code>obj.get()</code></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">getTime</span><span style="color:#E1E4E8;">(name)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">getTime</span><span style="color:#24292E;">(name)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span></code></pre></div><h4 id="obj-setscript" tabindex="-1">obj.setScript() <a class="header-anchor" href="#obj-setscript" aria-label="Permalink to &quot;obj.setScript()&quot;">​</a></h4><p>Привязка к объекту скрипта, который будет выполняться при каждом изменении значения объекта или при каждой его записи. Если объекта не существует, он будет создан.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setScript</span><span style="color:#E1E4E8;">(name, script.</span><span style="color:#B392F0;">lua</span><span style="color:#E1E4E8;">[, run_on_write])</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- script.lua - STR, имя файла скрипта с расширением</span></span>
<span class="line"><span style="color:#6A737D;">-- run_on_write - BOOL, false (default) = запуск при обновлении значения; true = запуск каждый раз при записи значения в объект + поднимается флаг W</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setScript</span><span style="color:#24292E;">(name, script.</span><span style="color:#6F42C1;">lua</span><span style="color:#24292E;">[, run_on_write])</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- script.lua - STR, имя файла скрипта с расширением</span></span>
<span class="line"><span style="color:#6A737D;">-- run_on_write - BOOL, false (default) = запуск при обновлении значения; true = запуск каждый раз при записи значения в объект + поднимается флаг W</span></span></code></pre></div><h4 id="obj-onchange-deprecated" tabindex="-1">obj.onChange() - deprecated <a class="header-anchor" href="#obj-onchange-deprecated" aria-label="Permalink to &quot;obj.onChange() - deprecated&quot;">​</a></h4><p>Привязка к объекту скрипта, который будет выполняться при каждом изменении значения объекта. Если объекта не существует, он будет создан.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">onChange</span><span style="color:#E1E4E8;">(name, script.</span><span style="color:#B392F0;">lua</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- script.lua - STR, имя файла скрипта с расширением</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">onChange</span><span style="color:#24292E;">(name, script.</span><span style="color:#6F42C1;">lua</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - STR, имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- script.lua - STR, имя файла скрипта с расширением</span></span></code></pre></div><h4 id="obj-remove" tabindex="-1">obj.remove() <a class="header-anchor" href="#obj-remove" aria-label="Permalink to &quot;obj.remove()&quot;">​</a></h4><p>Удаление объекта</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">remove</span><span style="color:#E1E4E8;">(name)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- result - BOOL, true - успех, false - объект не найден</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">remove</span><span style="color:#24292E;">(name)</span></span>
<span class="line"><span style="color:#6A737D;">-- name - имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">-- result - BOOL, true - успех, false - объект не найден</span></span></code></pre></div><hr><h3 id="http-api" tabindex="-1">HTTP API <a class="header-anchor" href="#http-api" aria-label="Permalink to &quot;HTTP API&quot;">​</a></h3><h4 id="получить-список-объектов" tabindex="-1">Получить список объектов <a class="header-anchor" href="#получить-список-объектов" aria-label="Permalink to &quot;Получить список объектов&quot;">​</a></h4><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">GET</span><span style="color:#E1E4E8;"> /api/obj</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">GET</span><span style="color:#24292E;"> /api/obj</span></span></code></pre></div><h4 id="установить-значение-объекта" tabindex="-1">Установить значение объекта <a class="header-anchor" href="#установить-значение-объекта" aria-label="Permalink to &quot;Установить значение объекта&quot;">​</a></h4><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">POST</span><span style="color:#E1E4E8;"> /api/obj?name=XXX&amp;value=YYY</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--</span></span>
<span class="line"><span style="color:#6A737D;">name - имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">value - значение --&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">POST</span><span style="color:#24292E;"> /api/obj?name=XXX&amp;value=YYY</span></span>
<span class="line"><span style="color:#6A737D;">&lt;!--</span></span>
<span class="line"><span style="color:#6A737D;">name - имя объекта</span></span>
<span class="line"><span style="color:#6A737D;">value - значение --&gt;</span></span></code></pre></div><h4 id="удалить-объект-с-устроиства" tabindex="-1">Удалить объект с устройства <a class="header-anchor" href="#удалить-объект-с-устроиства" aria-label="Permalink to &quot;Удалить объект с устройства&quot;">​</a></h4><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">DELETE</span><span style="color:#E1E4E8;"> /api/obj?name=obj_name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">DELETE</span><span style="color:#24292E;"> /api/obj?name=obj_name</span></span></code></pre></div><h4 id="получить-значение-объекта" tabindex="-1">Получить значение объекта <a class="header-anchor" href="#получить-значение-объекта" aria-label="Permalink to &quot;Получить значение объекта&quot;">​</a></h4><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">GET</span><span style="color:#E1E4E8;"> /api/obj?name=XXX</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">GET</span><span style="color:#24292E;"> /api/obj?name=XXX</span></span></code></pre></div><p>Флаги возвращаются в поле <code>flags: flag_value</code>:</p><ul><li><code>flag_value = 0: ACK=0; MQTT=0</code></li><li><code>flag_value = 1: ACK=0; MQTT=1</code></li><li><code>flag_value = 2: ACK=1; MQTT=0</code></li><li><code>flag_value = 3: ACK=1; MQTT=1</code></li></ul><h2 id="примеры" tabindex="-1">Примеры <a class="header-anchor" href="#примеры" aria-label="Permalink to &quot;Примеры&quot;">​</a></h2><h3 id="создание-и-настроика-объекта" tabindex="-1">Создание и настройка объекта <a class="header-anchor" href="#создание-и-настроика-объекта" aria-label="Permalink to &quot;Создание и настройка объекта&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setType</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;JSON&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- создает объект test с типом данных JSON</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setType</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;STR&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- изменяет тип данных объекта на STR</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;JSON&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- создает объект test с типом данных JSON</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;STR&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- изменяет тип данных объекта на STR</span></span></code></pre></div><h3 id="управление-флагом-mqtt-объекта" tabindex="-1">Управление флагом MQTT объекта <a class="header-anchor" href="#управление-флагом-mqtt-объекта" aria-label="Permalink to &quot;Управление флагом MQTT объекта&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setShare</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- включить передачу уведомлений в MQTT</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setShare</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- включить передачу уведомлений в MQTT</span></span></code></pre></div><h3 id="установка-значения-объекта" tabindex="-1">Установка значения объекта <a class="header-anchor" href="#установка-значения-объекта" aria-label="Permalink to &quot;Установка значения объекта&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="установка-значения-с-передачеи-ack" tabindex="-1">Установка значения с передачей ACK <a class="header-anchor" href="#установка-значения-с-передачеи-ack" aria-label="Permalink to &quot;Установка значения с передачей ACK&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="пример-скрипта-обработчика-событии-обращения-к-объекту" tabindex="-1">Пример скрипта-обработчика событий обращения к объекту <a class="header-anchor" href="#пример-скрипта-обработчика-событии-обращения-к-объекту" aria-label="Permalink to &quot;Пример скрипта-обработчика событий обращения к объекту&quot;">​</a></h3><p>Скрипт привязывается к объекту командой <code>obj.setScript()</code> в <code>init.lua</code></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> status </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> current_status, previous_status, ack </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- добавим обработчик булевых значений для склейки со строками</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> current_status </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  status </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">  status </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#6A737D;">-- отправляем уведомление только  в случае изменения значений с признаком ackw</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ack </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;wsecurity status is &quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> status)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> status </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> current_status, previous_status, ack </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- добавим обработчик булевых значений для склейки со строками</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> current_status </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  status </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">  status </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#6A737D;">-- отправляем уведомление только  в случае изменения значений с признаком ackw</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ack </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;wsecurity status is &quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> status)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><h3 id="удаление-объекта" tabindex="-1">Удаление объекта <a class="header-anchor" href="#удаление-объекта" aria-label="Permalink to &quot;Удаление объекта&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">remove</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="изменение-типа-переменнои" tabindex="-1">Изменение типа переменной <a class="header-anchor" href="#изменение-типа-переменнои" aria-label="Permalink to &quot;Изменение типа переменной&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setType</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;INT&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setType</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;INT&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="включение-уведомления-об-изменении-в-mqtt" tabindex="-1">Включение уведомления об изменении в MQTT <a class="header-anchor" href="#включение-уведомления-об-изменении-в-mqtt" aria-label="Permalink to &quot;Включение уведомления об изменении в MQTT&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setShare</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setShare</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="получение-времени-изменения-объекта" tabindex="-1">Получение времени изменения объекта <a class="header-anchor" href="#получение-времени-изменения-объекта" aria-label="Permalink to &quot;Получение времени изменения объекта&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> curr, prev </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">getTime</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;security.status&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Время предыдущего изменения:&quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> prev </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;, И последнего: &quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> curr </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; длительность события: &quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> curr</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">prev)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> curr, prev </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">getTime</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;security.status&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Время предыдущего изменения:&quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> prev </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;, И последнего: &quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> curr </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; длительность события: &quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> curr</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">prev)</span></span></code></pre></div><hr><h2 id="сетевые-объекты" tabindex="-1">Сетевые объекты <a class="header-anchor" href="#сетевые-объекты" aria-label="Permalink to &quot;Сетевые объекты&quot;">​</a></h2><p>Используются для синхронизации данных между несколькими шлюзами, при изменении объекта на одном, он так же изменится и на остальных шлюзах.</p><p>Данный функционал в разработке.</p>`,96),t=[o];function c(r,i,y,d,u,E){return a(),n("div",null,t)}const g=s(p,[["render",c]]);export{b as __pageData,g as default};
