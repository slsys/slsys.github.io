import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.f1c0562b.js";const o="/assets/luaPersonesTrackerMap79Port.58a74b83.png",p="/assets/luaPersonesTrackerDevName.38ffb162.png",A=JSON.parse('{"title":"SLS Device Tracker","description":"","frontmatter":{},"headers":[],"relativePath":"lua_doc/luaPersonesTracker.md","filePath":"lua_doc/luaPersonesTracker.md"}'),e={name:"lua_doc/luaPersonesTracker.md"},t=l('<nav class="table-of-contents"><ul><li><a href="#введение">Введение</a></li><li><a href="#подготовка-роутера">Подготовка роутера</a></li><li><a href="#основнои-скрипт">Основной скрипт</a></li><li><a href="#инициализация">Инициализация</a></li><li><a href="#хранение-данных-в-памяти-шлюза">Хранение данных в памяти шлюза</a></li><li><a href="#исполнительные-скрипты-или-цели">Исполнительные скрипты или цели</a></li><li><a href="#пример-выключение-света-и-уведомление-в-телеграмм">Пример. Выключение света и уведомление в Телеграмм</a></li></ul></nav><h1 id="sls-device-tracker" tabindex="-1">SLS Device Tracker <a class="header-anchor" href="#sls-device-tracker" aria-label="Permalink to &quot;SLS Device Tracker&quot;">​</a></h1><h2 id="введение" tabindex="-1">Введение <a class="header-anchor" href="#введение" aria-label="Permalink to &quot;Введение&quot;">​</a></h2><p>Решение позволяет отслеживать устройства, зарегистрированные на маршрутизаторе и выполнять какие-либо действия. Разрабатывалось и тестировалось на роутере Keenetic Speedster (KN-3010) с прошивкой 3.8.5 и SLS с прошивкой 2022.11.26d1. Его можно с легкостью адаптировать под практически любой современный роутер, имеющий HTTP API.</p><p>Для разработки данной автоматизации применено достаточно много функционала SLS. Её изучение может помочь новичкам лучше разобраться во внутренней кухне шлюза.</p><p>При отладке в своей среде необходимо следить за объемом получаемых с роутера данных и по возможности добиться их минимизации, поскольку при больших объемах может не хватать ОЗУ SLS для их обработки, особенно на старых версиях прошивки с <code>http.request</code> первой версии.</p><h2 id="подготовка-роутера" tabindex="-1">Подготовка роутера <a class="header-anchor" href="#подготовка-роутера" aria-label="Permalink to &quot;Подготовка роутера&quot;">​</a></h2><ol><li>REST Core Interface маршрутизаторов Keenetic работает на <code>localhost:79</code> без авторизации. Кому не страшны слова rest, api, digest, смогут себе ее настроить при необходимости. Скажу только, что понадобится поддержка, отсутствующая нативно в SLS, шифрования md и sha. Настройка переадресации порта 79 rci с интерфейса домашней сети на localhost роутера: <img src="'+o+'" alt=""></li><li>Для минимизации циклов перебора массивов данных, дать отслеживаемым устройствам такие имена, которые разрешено использовать в названиях ключей таблиц LUA. Например: <img src="'+p+`" alt=""></li></ol><h2 id="основнои-скрипт" tabindex="-1">Основной скрипт <a class="header-anchor" href="#основнои-скрипт" aria-label="Permalink to &quot;Основной скрипт&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- personesTracker.lua</span></span>
<span class="line"><span style="color:#6A737D;">-- устройства и их статус</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> family </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  IPhoneAlexey </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">-- имя должно быть = имени в роутере</span></span>
<span class="line"><span style="color:#E1E4E8;">    name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;PAPA&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">-- на будущее, для UI </span></span>
<span class="line"><span style="color:#E1E4E8;">    active </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">-- статус обнуляю</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  IPhoneVera </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;MAMA&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    active </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  IPhoneGosha </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Gosha&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    active </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  IPhoneVlad </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    active </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">-- импорт модуля JSON -- https://github.com/rxi/json.lua</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> json </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">loadfile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/int/json.lua&quot;</span><span style="color:#E1E4E8;">)()</span></span>
<span class="line"><span style="color:#6A737D;">-- получаю данные о зарегистрированных на роутере устройствах и полученный JSON конвертирую в table</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> json.</span><span style="color:#79B8FF;">decode</span><span style="color:#E1E4E8;">(http.</span><span style="color:#79B8FF;">request2</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;http://192.168.1.1:79/rci/show/ip/hotspot/summary?attribute=txspeed&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#6A737D;">-- полученные данные перебираю и если устройство в роутере active = true, записываю в таблицу устройств</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> anyBodyHome </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">-- флаг - дома кто-то есть</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">data[</span><span style="color:#9ECBFF;">&quot;host&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (data[</span><span style="color:#9ECBFF;">&quot;host&quot;</span><span style="color:#E1E4E8;">][i][</span><span style="color:#9ECBFF;">&quot;active&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> family[data[</span><span style="color:#9ECBFF;">&quot;host&quot;</span><span style="color:#E1E4E8;">][i][</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">]] </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">      family[data[</span><span style="color:#9ECBFF;">&quot;host&quot;</span><span style="color:#E1E4E8;">][i][</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">]][</span><span style="color:#9ECBFF;">&#39;active&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">      anyBodyHome </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#6A737D;">-- актуализированную таблицу устройств конвертирую в JSON</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> fullHouseNow </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> json.</span><span style="color:#79B8FF;">encode</span><span style="color:#E1E4E8;">(family)</span></span>
<span class="line"><span style="color:#6A737D;">-- получаю из памяти сохраненную таблицу устройств</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> fullHouse </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj.</span><span style="color:#79B8FF;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fullHouse&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- если таблица устройств есть в памяти</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> fullHouse </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- если текущий статус устройств изменился</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">fullHouse </span><span style="color:#F97583;">~=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">fullHouseNow </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">-- записываю в пямять</span></span>
<span class="line"><span style="color:#E1E4E8;">    obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fullHouse&quot;</span><span style="color:#E1E4E8;">, fullHouseNow, anyBodyHome)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">-- иначе записываю в память в первый раз</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fullHouse&quot;</span><span style="color:#E1E4E8;">, fullHouseNow, anyBodyHome)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- personesTracker.lua</span></span>
<span class="line"><span style="color:#6A737D;">-- устройства и их статус</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> family </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  IPhoneAlexey </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">-- имя должно быть = имени в роутере</span></span>
<span class="line"><span style="color:#24292E;">    name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;PAPA&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">-- на будущее, для UI </span></span>
<span class="line"><span style="color:#24292E;">    active </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">-- статус обнуляю</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  IPhoneVera </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;MAMA&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    active </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  IPhoneGosha </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Gosha&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    active </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  IPhoneVlad </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    active </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">-- импорт модуля JSON -- https://github.com/rxi/json.lua</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> json </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">loadfile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/int/json.lua&quot;</span><span style="color:#24292E;">)()</span></span>
<span class="line"><span style="color:#6A737D;">-- получаю данные о зарегистрированных на роутере устройствах и полученный JSON конвертирую в table</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> json.</span><span style="color:#005CC5;">decode</span><span style="color:#24292E;">(http.</span><span style="color:#005CC5;">request2</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;http://192.168.1.1:79/rci/show/ip/hotspot/summary?attribute=txspeed&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;">-- полученные данные перебираю и если устройство в роутере active = true, записываю в таблицу устройств</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> anyBodyHome </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">-- флаг - дома кто-то есть</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">data[</span><span style="color:#032F62;">&quot;host&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (data[</span><span style="color:#032F62;">&quot;host&quot;</span><span style="color:#24292E;">][i][</span><span style="color:#032F62;">&quot;active&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> family[data[</span><span style="color:#032F62;">&quot;host&quot;</span><span style="color:#24292E;">][i][</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">]] </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">      family[data[</span><span style="color:#032F62;">&quot;host&quot;</span><span style="color:#24292E;">][i][</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">]][</span><span style="color:#032F62;">&#39;active&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">      anyBodyHome </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#6A737D;">-- актуализированную таблицу устройств конвертирую в JSON</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> fullHouseNow </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> json.</span><span style="color:#005CC5;">encode</span><span style="color:#24292E;">(family)</span></span>
<span class="line"><span style="color:#6A737D;">-- получаю из памяти сохраненную таблицу устройств</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> fullHouse </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj.</span><span style="color:#005CC5;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fullHouse&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">-- если таблица устройств есть в памяти</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> fullHouse </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- если текущий статус устройств изменился</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">fullHouse </span><span style="color:#D73A49;">~=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">fullHouseNow </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">-- записываю в пямять</span></span>
<span class="line"><span style="color:#24292E;">    obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fullHouse&quot;</span><span style="color:#24292E;">, fullHouseNow, anyBodyHome)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">-- иначе записываю в память в первый раз</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fullHouse&quot;</span><span style="color:#24292E;">, fullHouseNow, anyBodyHome)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><ul><li>В таблицу <code>family</code> необходимо внести данные отслеживаемых устройств, согласно комментариев. Поле <code>name</code> необязательно и предусмотрено для будущего информера с UI SLS. Также можно добавить и другие поля: mac, IP, etc... если это необходимо для решения текущих задач.</li><li>для работы с JSON необходимо добавить в шлюз файл <code>json.lua</code> с указанного в листинге ресурса.</li></ul><h2 id="инициализация" tabindex="-1">Инициализация <a class="header-anchor" href="#инициализация" aria-label="Permalink to &quot;Инициализация&quot;">​</a></h2><p>В скрипте инициализации <code>init.lua</code> необходимо добавить задачу планировщика для запуска основного скрипта с нужной периодичностью: <code>scripts.setTimer(&quot;personesTracker.lua&quot;, 60)</code></p><h2 id="хранение-данных-в-памяти-шлюза" tabindex="-1">Хранение данных в памяти шлюза <a class="header-anchor" href="#хранение-данных-в-памяти-шлюза" aria-label="Permalink to &quot;Хранение данных в памяти шлюза&quot;">​</a></h2><p>Для обмена между скриптами и для информеров, а также для передачи во внешние системы, результаты работы основного скрипта хранятся в ОЗУ SLS в виде объекта <code>fullHouse</code>. Данные хранятся в формате JSON. Содержат в себе как справочную информацию, так и текущий статус регистрации отслеживаемых устройств в домашней сети (поле <code>active</code>). Также хранится статус наличия или отсутствия хоть кого в доме (в зоне покрытия Wi-Fi сети) в виде флага <code>ACK</code> объекта.</p><h2 id="исполнительные-скрипты-или-цели" tabindex="-1">Исполнительные скрипты или цели <a class="header-anchor" href="#исполнительные-скрипты-или-цели" aria-label="Permalink to &quot;Исполнительные скрипты или цели&quot;">​</a></h2><p>Использовать результаты работы основного скрипта несколькими способами. Например:</p><ul><li>Выполнять действия непосредственно из него. Функция <code>dofile()</code></li><li>Запускать скрипт(ы) по изменению объекта <code>fullHose</code>. Функция <code>obj.onChange(&#39;fullHouse&#39;, &#39;kick2RTFM.lua&#39;)</code></li><li>Передавать данные при изменении объекта во внешние системы по MQTT. Для этого необходимо включить параметр объекта &quot;Передача уведомлений MQTT&quot; <code>obj.setOpt(&quot;fullHose&quot;, &quot;STR&quot;, true)</code></li><li>Также данные можно передавать с помощью функции <code>http.request()</code></li><li>Другие скрипты в своей логике также могут использовать данные о присутствии людей в доме.</li><li>etc</li></ul><h2 id="пример-выключение-света-и-уведомление-в-телеграмм" tabindex="-1">Пример. Выключение света и уведомление в Телеграмм <a class="header-anchor" href="#пример-выключение-света-и-уведомление-в-телеграмм" aria-label="Permalink to &quot;Пример. Выключение света и уведомление в Телеграмм&quot;">​</a></h2><p>ToDo. Добавить пример</p>`,20),c=[t];function r(y,E,i,u,F,d){return a(),n("div",null,c)}const q=s(e,[["render",r]]);export{A as __pageData,q as default};
