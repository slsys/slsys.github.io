import{_ as a,o as s,c as e,Q as n}from"./chunks/framework.f1c0562b.js";const _=JSON.parse('{"title":"Использование карт памяти SD (DRAFT)","description":"","frontmatter":{},"headers":[],"relativePath":"lua_doc/sd.md","filePath":"lua_doc/sd.md"}'),l={name:"lua_doc/sd.md"},o=n(`<h1 id="использование-карт-памяти-sd-draft" tabindex="-1">Использование карт памяти SD (DRAFT) <a class="header-anchor" href="#использование-карт-памяти-sd-draft" aria-label="Permalink to &quot;Использование карт памяти SD (DRAFT)&quot;">​</a></h1><h2 id="о-носителе" tabindex="-1">О носителе <a class="header-anchor" href="#о-носителе" aria-label="Permalink to &quot;О носителе&quot;">​</a></h2><ul><li>Размер: до 64Gb</li><li>Файловая система: FAT32</li><li>Разделы: монтируется только первый.</li><li>Размер кластера: зависит от размера карты, с учетом компромисса между производительностью и экономичным хранением: <ul><li>чем меньше размер файлов, тем меньше должен быть размер кластера</li><li>чем меньше размер кластера, тем меньше производительность</li></ul></li></ul><h3 id="варианты-размера-кластера" tabindex="-1">Варианты размера кластера <a class="header-anchor" href="#варианты-размера-кластера" aria-label="Permalink to &quot;Варианты размера кластера&quot;">​</a></h3><ul><li>8Gb FAT32: 2k - 64k</li><li>от 32Gb FAT32: 4k - 64k</li></ul><h2 id="подготовка-носителя" tabindex="-1">Подготовка носителя <a class="header-anchor" href="#подготовка-носителя" aria-label="Permalink to &quot;Подготовка носителя&quot;">​</a></h2><p>Карта перед установкой в шлюз, размечается и форматируется на ПК</p><h2 id="монтирование" tabindex="-1">Монтирование <a class="header-anchor" href="#монтирование" aria-label="Permalink to &quot;Монтирование&quot;">​</a></h2><p>После установки в шлюз, карта готова к использованию. Однако перед обращением к файлам, необходимо смонтировать раздел, например:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- init.lua</span></span>
<span class="line"><span style="color:#E1E4E8;">os.</span><span style="color:#79B8FF;">mountSD</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- init.lua</span></span>
<span class="line"><span style="color:#24292E;">os.</span><span style="color:#005CC5;">mountSD</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Фрагмент лога монтирования:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[SD] Mounting...</span></span>
<span class="line"><span style="color:#e1e4e8;">[SD] Card Type: SDHC</span></span>
<span class="line"><span style="color:#e1e4e8;">[SD] Card Size: 60290MB</span></span>
<span class="line"><span style="color:#e1e4e8;">[SD] Card totalBytes: 60275MB</span></span>
<span class="line"><span style="color:#e1e4e8;">[SD] Card usedBytes: 0MB</span></span>
<span class="line"><span style="color:#e1e4e8;">[SD] Mount done!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[SD] Mounting...</span></span>
<span class="line"><span style="color:#24292e;">[SD] Card Type: SDHC</span></span>
<span class="line"><span style="color:#24292e;">[SD] Card Size: 60290MB</span></span>
<span class="line"><span style="color:#24292e;">[SD] Card totalBytes: 60275MB</span></span>
<span class="line"><span style="color:#24292e;">[SD] Card usedBytes: 0MB</span></span>
<span class="line"><span style="color:#24292e;">[SD] Mount done!</span></span></code></pre></div>`,12),p=[o];function t(i,c,r,d,u,h){return s(),e("div",null,p)}const D=a(l,[["render",t]]);export{_ as __pageData,D as default};
