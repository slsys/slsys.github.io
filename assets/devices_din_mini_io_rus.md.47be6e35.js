import{_ as s,o as a,c as p,Q as n}from"./chunks/framework.f1c0562b.js";const o="/assets/ioboard.38f1b14f.png",C=JSON.parse('{"title":"Модуль ввода-вывода","description":"","frontmatter":{},"headers":[],"relativePath":"devices/din_mini_io_rus.md","filePath":"devices/din_mini_io_rus.md"}'),l={name:"devices/din_mini_io_rus.md"},t=n('<h1 id="модуль-ввода-вывода" tabindex="-1">Модуль ввода-вывода <a class="header-anchor" href="#модуль-ввода-вывода" aria-label="Permalink to &quot;Модуль ввода-вывода&quot;">​</a></h1><p>Плата расширения IO-board для <a href="/devices/din_mini_base_rus">SLS DIN MINI</a> предоставляет 6 независимых каналов. Позволяет подключать счетчики, герконы, концевики, производить управление другими устройствами. Настройка и инициализация производится lua скриптами.</p><p><img src="'+o+`" alt="IO"></p><p>Возможны следующие режимы работы каналов:</p><ul><li><p>Вход: сухой контакт (Срабатывает при замыкании входа на GND)</p></li><li><p>Выход: транзисторный с поддержкой ШИМ (Ток течет между + питания и выходом)</p></li></ul><h2 id="выбор-аппаратного-режима-работы-порта" tabindex="-1">Выбор аппаратного режима работы порта <a class="header-anchor" href="#выбор-аппаратного-режима-работы-порта" aria-label="Permalink to &quot;Выбор аппаратного режима работы порта&quot;">​</a></h2><p>Для выбора аппаратного режима используются перемычки на плате.</p><ul><li><p>Вверх - выход.</p></li><li><p>Вниз - вход.</p></li></ul><h2 id="инициализация" tabindex="-1">Инициализация <a class="header-anchor" href="#инициализация" aria-label="Permalink to &quot;Инициализация&quot;">​</a></h2><h3 id="определение-gpio" tabindex="-1">Определение GPIO <a class="header-anchor" href="#определение-gpio" aria-label="Permalink to &quot;Определение GPIO&quot;">​</a></h3><p>В SLS DIN MINI GPIO распределены следующим порядков:</p><ul><li>Канал 1: GPIO32</li><li>Канал 2: GPIO25</li><li>Канал 3: GPIO26</li><li>Канал 4: GPIO27</li><li>Канал 5: GPIO12</li><li>Канал 6: GPIO13</li></ul><p>Определение режима прописывается командой <code>gpio.addInput(GPIO, [gpio.INPUT,gpio.OUTPUT] , mode, &quot;name&quot;)</code> через редактор скиптов в файле <em>init.lua</em>, процедура проводится однократно. init.lua:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">--определяем режим работы портов</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input1&quot;</span><span style="color:#E1E4E8;">)                  </span><span style="color:#6A737D;">-- Вход 1, gpio 32  (датчик заполненного сэптика)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input2&quot;</span><span style="color:#E1E4E8;">)                  </span><span style="color:#6A737D;">-- Вход 2, gpio 25  (геркон калитки)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">26</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input3&quot;</span><span style="color:#E1E4E8;">)                  </span><span style="color:#6A737D;">-- Вход 3, gpio 26</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input4&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">)   </span><span style="color:#6A737D;">-- Вход 4, gpio 27   (геркон ворот)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input5&quot;</span><span style="color:#E1E4E8;">)                  </span><span style="color:#6A737D;">-- Вход 5, gpio 12</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input6&quot;</span><span style="color:#E1E4E8;">)                  </span><span style="color:#6A737D;">-- Вход 6, gpio 13</span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">setOpt</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;septik&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;STR&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- для удобства работы создадим объект septik и настроим отправку состояния в mqtt (true)</span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#6A737D;">--- определяем действия, которые необходимо выполнять при изменении значений портов</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">onChange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;io.input4.value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;vorota.lua&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">-- при изменении io.input4.value выполним скрипт vorota.lua</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">onChange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;io.input2.value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;vorota.lua&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">-- при изменении io.input4.value выполним скрипт vorota.lua</span></span>
<span class="line"><span style="color:#E1E4E8;">obj.</span><span style="color:#79B8FF;">onChange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;io.input1.value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;septik.lua&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">-- при изменении io.input4.value выполним скрипт vorota.lua</span></span>
<span class="line"><span style="color:#E1E4E8;">scripts.</span><span style="color:#79B8FF;">setTimer</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;septik&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">os.time</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">)      </span><span style="color:#6A737D;">-- запустим скрипт чтения состояния сэптика при запуске SLS</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">--определяем режим работы портов</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input1&quot;</span><span style="color:#24292E;">)                  </span><span style="color:#6A737D;">-- Вход 1, gpio 32  (датчик заполненного сэптика)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input2&quot;</span><span style="color:#24292E;">)                  </span><span style="color:#6A737D;">-- Вход 2, gpio 25  (геркон калитки)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input3&quot;</span><span style="color:#24292E;">)                  </span><span style="color:#6A737D;">-- Вход 3, gpio 26</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input4&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">)   </span><span style="color:#6A737D;">-- Вход 4, gpio 27   (геркон ворот)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input5&quot;</span><span style="color:#24292E;">)                  </span><span style="color:#6A737D;">-- Вход 5, gpio 12</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input6&quot;</span><span style="color:#24292E;">)                  </span><span style="color:#6A737D;">-- Вход 6, gpio 13</span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">setOpt</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;septik&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;STR&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- для удобства работы создадим объект septik и настроим отправку состояния в mqtt (true)</span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#6A737D;">--- определяем действия, которые необходимо выполнять при изменении значений портов</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">onChange</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;io.input4.value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vorota.lua&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">-- при изменении io.input4.value выполним скрипт vorota.lua</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">onChange</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;io.input2.value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vorota.lua&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">-- при изменении io.input4.value выполним скрипт vorota.lua</span></span>
<span class="line"><span style="color:#24292E;">obj.</span><span style="color:#005CC5;">onChange</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;io.input1.value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;septik.lua&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">-- при изменении io.input4.value выполним скрипт vorota.lua</span></span>
<span class="line"><span style="color:#24292E;">scripts.</span><span style="color:#005CC5;">setTimer</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;septik&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">os.time</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;">-- запустим скрипт чтения состояния сэптика при запуске SLS</span></span></code></pre></div><p>Пример скрипта опроса состояния сэптика septik.lua (запускается при включении SLS и изменении gpio:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> septik </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gpio.</span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">)           </span><span style="color:#6A737D;">--опредеяем порт для чтения состояния</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> septik </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">    telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#Сэптик очищен&quot;</span><span style="color:#E1E4E8;">)      </span><span style="color:#6A737D;">--отправляем сообщение в телеграм</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;septik&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;empty&quot;</span><span style="color:#E1E4E8;">)             </span><span style="color:#6A737D;">--задаем состояние объекта (для удобства работы)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> septik </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  obj.</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;septik&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;full&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  telegram.</span><span style="color:#79B8FF;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#Сэптик заполнен&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">end</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">--отправляем сообщение в телеграм</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">local</span><span style="color:#24292E;"> septik </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gpio.</span><span style="color:#005CC5;">read</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">)           </span><span style="color:#6A737D;">--опредеяем порт для чтения состояния</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> septik </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">    telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#Сэптик очищен&quot;</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;">--отправляем сообщение в телеграм</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;septik&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;empty&quot;</span><span style="color:#24292E;">)             </span><span style="color:#6A737D;">--задаем состояние объекта (для удобства работы)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> septik </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  obj.</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;septik&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;full&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  telegram.</span><span style="color:#005CC5;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#Сэптик заполнен&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">end</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">--отправляем сообщение в телеграм</span></span></code></pre></div><h3 id="выбор-программного-режима-работы-mode" tabindex="-1">Выбор программного режима работы (mode) <a class="header-anchor" href="#выбор-программного-режима-работы-mode" aria-label="Permalink to &quot;Выбор программного режима работы (mode)&quot;">​</a></h3><p>Переназнчаить режима работы порта можно функцией <em>gpio.mode(GPIO, mode)</em>, где mode может быть <em>gpio.INPUT</em> или <em>gpio.OUTPUT</em>.</p><table><thead><tr><th>mode</th><th>Режим</th><th>Описание</th></tr></thead><tbody><tr><td>0</td><td>SWITCH</td><td>В данном режиме шлюз контролирует текущее состояние входа, поэтому в этом режиме можно подключать датчики откр., движ., протечек, клас-е выкл. с фиксацией.</td></tr><tr><td>1</td><td>COUNTER</td><td>Простой подсчет событий, новое событие фиксируется по состоянию разыкания контакта, можно подключать например счетчики воды, газа и др.</td></tr><tr><td>2</td><td>MULTI_SWITCH</td><td>Предназначен для подключения выкл. без фиксации. Поддерживает следующие события: короткие (одиночное, двойное, тройное, четверное, и так до 255), длительное, короткое, а затем длительное, а так же завершение длительного нажатия. При завершении длительного фиксируется его длительность. Итого 767 разных событий. Можно строить очень сложную логику, имея всего 1 кнопку!</td></tr><tr><td>3</td><td>MOMENTARY</td><td>Режим фиксирует без задержки, присущей режиму MULTI_SWITCH события нажатия и отпускания кнопки без фиксации, при этом при отпускании фиксируется дл-сть нажатия.</td></tr><tr><td>4</td><td>TOGGLE</td><td>Для кнопок без фиксации, каждое нажатие переключает состояние входа.</td></tr></tbody></table><h3 id="примеры-использования" tabindex="-1">Примеры использования <a class="header-anchor" href="#примеры-использования" aria-label="Permalink to &quot;Примеры использования&quot;">​</a></h3><p>Задать каналу 2 режим входа, получить его значение:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">mode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gpio.</span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(value)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">mode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gpio.</span><span style="color:#005CC5;">read</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(value)</span></span></code></pre></div><p>Задать каналу 4 режим выхода и включить его:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">mode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">OUTPUT</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">write</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">mode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">OUTPUT</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">write</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Задать каналу 1 режим выхода и включить ШИМ со скважностью 50%:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">mode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">OUTPUT</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">pwmsetup</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">pwm</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">255</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">mode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">OUTPUT</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">pwmsetup</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">pwm</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">255</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Задать каналу 4 режим выхода и включить его на 100мс:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">mode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">OUTPUT</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">write</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">os.</span><span style="color:#79B8FF;">delay</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">write</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">mode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">OUTPUT</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">write</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">os.</span><span style="color:#005CC5;">delay</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">write</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Включить режим входа MultiSwitch на 1 канале:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input1&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input1&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Включить режим входа MultiSwitch на сервисной кнопке и изменить тайминги debounce, send и hold:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- Стандартные тайминги: debounce = 50, send = 300 и hold = 1000</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">33</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input0&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- Стандартные тайминги: debounce = 50, send = 300 и hold = 1000</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">33</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input0&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">)</span></span></code></pre></div><p>Добавить все входы модуля в режиме MultiSwitch:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input2&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">26</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input3&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input4&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input5&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">gpio.</span><span style="color:#79B8FF;">addInput</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, gpio.</span><span style="color:#B392F0;">INPUT_PULLUP</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;input6&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input2&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">26</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input3&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input4&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input5&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">gpio.</span><span style="color:#005CC5;">addInput</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, gpio.</span><span style="color:#6F42C1;">INPUT_PULLUP</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;input6&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="полезные-ссылки" tabindex="-1">Полезные ссылки <a class="header-anchor" href="#полезные-ссылки" aria-label="Permalink to &quot;Полезные ссылки&quot;">​</a></h2><p><a href="/gpio_sample">Использования GPIO на примерах решаемых задач</a></p>`,36),e=[t];function c(r,E,y,i,F,u){return a(),p("div",null,e)}const g=s(l,[["render",c]]);export{C as __pageData,g as default};
