import{_ as s,o as a,c as e,Q as t}from"./chunks/framework.f1c0562b.js";const b=JSON.parse('{"title":"Сценарии","description":"","frontmatter":{},"headers":[],"relativePath":"scenes.md","filePath":"scenes.md"}'),o={name:"scenes.md"},n=t(`<h1 id="сценарии" tabindex="-1">Сценарии <a class="header-anchor" href="#сценарии" aria-label="Permalink to &quot;Сценарии&quot;">​</a></h1><p>Система сценарий позволяет сконфигурировать логику автоматизаций в шлюзе без написания скриптов.</p><p>Базовая поддержка появилась в версии <strong>2021.11.21d7</strong>.</p><h2 id="создание-сценариев" tabindex="-1">Создание сценариев <a class="header-anchor" href="#создание-сценариев" aria-label="Permalink to &quot;Создание сценариев&quot;">​</a></h2><p>На первоначальном этапе создание сценариев возможно ручным созданием файла сценариев.</p><p>В дальнейшем будет разработан удобный веб интерфейс где можно легко и быстро создавать сценарии.</p><h2 id="хранение-и-загрузка-сценариев" tabindex="-1">Хранение и загрузка сценариев <a class="header-anchor" href="#хранение-и-загрузка-сценариев" aria-label="Permalink to &quot;Хранение и загрузка сценариев&quot;">​</a></h2><p>Сценарии хранятся в формате json в файле scenes.json</p><p>Для загрузки сценариев необзодимо добавить в <em>init.lua</em>, добавил <em>scenes.begin()</em>.</p><p>Это необходимо на этапе бетатестирования системы, в последующем надобность в этом вызове отпадет и система будет загружаться автоматически.</p><h2 id="опиcание-работы-системы" tabindex="-1">Опиcание работы системы <a class="header-anchor" href="#опиcание-работы-системы" aria-label="Permalink to &quot;Опиcание работы системы&quot;">​</a></h2><p>Система сценариев наблюдает за событияеми системы и позволяет реагировать на них действиями.</p><p>Условия (триггеры) задаются в блоке <em>if</em>.</p><p>Действия (экшены) задаются в блоке <em>then</em>.</p><p>Возможно существование нескольких условия и действий.</p><p>Каждое условие и действие имеет свой тип и параметры.</p><h3 id="типы-условии" tabindex="-1">Типы условий <a class="header-anchor" href="#типы-условии" aria-label="Permalink to &quot;Типы условий&quot;">​</a></h3><ol><li><p>Событие изменение состояния Zigbee устройства</p><p>Параметры: FriendlyName, StateName, Rule, StateValue</p></li><li><p>Событие изменение объекта (Пока не реализовано)</p><p>Параметры: ObjName, Rule, ObjValue</p></li><li><p>Событие наступления времени (Пока не реализовано)</p></li><li><p>Событие изменение входа IO (Пока не реализовано)</p></li></ol><h3 id="типы-деиствии" tabindex="-1">Типы действий <a class="header-anchor" href="#типы-деиствии" aria-label="Permalink to &quot;Типы действий&quot;">​</a></h3><ol><li><p>Изменение состояния Zigbee устройства</p><p>Параметры: FriendlyName, StateName, Rule, StateValue</p></li><li><p>Изменение объекта</p><p>Параметры: ObjName, Rule, ObjValue</p></li><li><p>Управление выходами IO (Пока не реализовано)</p></li><li><p>Отправлка уведомлений в Telegram (Пока не реализовано)</p></li><li><p>Запуск Lua кода (Пока не реализовано)</p></li><li><p>Включение/выключение сценария (Пока не реализовано)</p></li><li><p>Запуск таймера (Пока не реализовано)</p></li></ol><h3 id="правила-в-параметрах" tabindex="-1">Правила в параметрах <a class="header-anchor" href="#правила-в-параметрах" aria-label="Permalink to &quot;Правила в параметрах&quot;">​</a></h3><ul><li><p>Правила для условий: &gt;,&lt;,=,==, ,&gt;=,&lt;=,!=,!,&lt;&gt;</p></li><li><p>Правила для действий: =</p><p>В дальнейшем можно будет использовать + и - для прибавления и убавления значения</p></li></ul><h3 id="логика-для-условии" tabindex="-1">Логика для условий <a class="header-anchor" href="#логика-для-условии" aria-label="Permalink to &quot;Логика для условий&quot;">​</a></h3><p>В дальнейшем можно будет использовать несколько условий и объединять их логическими операндами.</p><h3 id="включение-и-выключение-сценария" tabindex="-1">Включение и выключение сценария <a class="header-anchor" href="#включение-и-выключение-сценария" aria-label="Permalink to &quot;Включение и выключение сценария&quot;">​</a></h3><p>В дальнейшем можно будет включать и выключать сценарии</p><h2 id="пример-фаила-сценариев" tabindex="-1">Пример файла сценариев <a class="header-anchor" href="#пример-фаила-сценариев" aria-label="Permalink to &quot;Пример файла сценариев&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[</span></span>
<span class="line"><span style="color:#e1e4e8;">  { </span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;desc&quot;: &quot;Set 10 brigtness&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;if&quot;: [{&quot;t&quot;:1, &quot;p&quot;: [&quot;room_sw1&quot;, &quot;action&quot;, &quot;=&quot;, &quot;single_left&quot;]}],</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;then&quot;: [{&quot;t&quot;: 1, &quot;p&quot;: [&quot;room_light&quot;, &quot;brightness&quot;, &quot;=&quot;, &quot;10&quot;]}]</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  { </span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;desc&quot;: &quot;Light off when Obj test_obj is false and Obj test_enable is true&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;if&quot;: [</span></span>
<span class="line"><span style="color:#e1e4e8;">      {&quot;t&quot;:2,&quot;p&quot;:[&quot;test_obj&quot;, &quot;=&quot;, &quot;false&quot;],&quot;lo&quot;:0},</span></span>
<span class="line"><span style="color:#e1e4e8;">      {&quot;t&quot;:2,&quot;p&quot;:[&quot;test_enable&quot;, &quot;=&quot;, &quot;true&quot;]}      </span></span>
<span class="line"><span style="color:#e1e4e8;">    ],</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;then&quot;: [{&quot;t&quot;: 1, &quot;p&quot;: [&quot;room_light&quot;, &quot;state&quot;, &quot;&quot;, &quot;off&quot;]}]</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span>
<span class="line"><span style="color:#e1e4e8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[</span></span>
<span class="line"><span style="color:#24292e;">  { </span></span>
<span class="line"><span style="color:#24292e;">    &quot;desc&quot;: &quot;Set 10 brigtness&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    </span></span>
<span class="line"><span style="color:#24292e;">    &quot;if&quot;: [{&quot;t&quot;:1, &quot;p&quot;: [&quot;room_sw1&quot;, &quot;action&quot;, &quot;=&quot;, &quot;single_left&quot;]}],</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">    &quot;then&quot;: [{&quot;t&quot;: 1, &quot;p&quot;: [&quot;room_light&quot;, &quot;brightness&quot;, &quot;=&quot;, &quot;10&quot;]}]</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  { </span></span>
<span class="line"><span style="color:#24292e;">    &quot;desc&quot;: &quot;Light off when Obj test_obj is false and Obj test_enable is true&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    </span></span>
<span class="line"><span style="color:#24292e;">    &quot;if&quot;: [</span></span>
<span class="line"><span style="color:#24292e;">      {&quot;t&quot;:2,&quot;p&quot;:[&quot;test_obj&quot;, &quot;=&quot;, &quot;false&quot;],&quot;lo&quot;:0},</span></span>
<span class="line"><span style="color:#24292e;">      {&quot;t&quot;:2,&quot;p&quot;:[&quot;test_enable&quot;, &quot;=&quot;, &quot;true&quot;]}      </span></span>
<span class="line"><span style="color:#24292e;">    ],</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">    &quot;then&quot;: [{&quot;t&quot;: 1, &quot;p&quot;: [&quot;room_light&quot;, &quot;state&quot;, &quot;&quot;, &quot;off&quot;]}]</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span>
<span class="line"><span style="color:#24292e;">]</span></span></code></pre></div>`,28),l=[n];function p(u,q,i,c,r,h){return a(),e("div",null,l)}const _=s(o,[["render",p]]);export{b as __pageData,_ as default};
